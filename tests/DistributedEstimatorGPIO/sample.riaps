// RIAPS Sample

app DistributedEstimator {
	// Message types used in the app
    message SensorReady; 
    message SensorQuery; 
    message SensorValue; 
    message Estimate;
    message Blink;
    
	// GPIODevice
    device GPIODevice() {
      inside trigger /* default */; 	// Inside port for triggering message coming from an internal thread.
      timer clock 100;					// Timer, used only once for initialization
      sub blink : Blink;
    }
    
	// Sensor component
    component Sensor (rate = 1) {
      timer clock 500; 								// Periodic timer trigger to trigger sensor every 250 msec
      pub ready : SensorReady ;						// Publish port for SensorReady messages 
      rep request : ( SensorQuery , SensorValue ) ;	// Reply port to query the sensor and retrieve its value
    }
    
    // Local estimator component
    component LocalEstimator {
      sub ready : SensorReady ;						// Subscriber port to trigger component with SensorReady messages
      req query : (SensorQuery , SensorValue ) ;	// Request port to query the sensor and retrieve its value
      pub blink : Blink;							// Blink GPIO
      pub estimate : Estimate ;						// Publish port to publish estimated value messages
    }
    
    // Global estimator
    component GlobalEstimator {
      sub estimate : Estimate ;						// Subscriber port to receive the local estimates
      timer wakeup 500; 							// Periodic timer to wake up estimator every 250 msec
      pub blink : Blink;							// Blink GPIO
    }
    
    // Estimator actor
    actor Estimator (rate = 1) {
       local SensorReady, SensorQuery, SensorValue, Blink ;	// Local message types
       {  // Sensor component
          sensor : Sensor (rate = rate);								
          // Local estimator, publishes global message 'Estimate' 
		  filter : LocalEstimator;
		  // GPIO device
		  gpio : GPIODevice;
       }
    }
    actor Aggregator {
       local Blink;
       {  // Global estimator, subscribes to 'Estimate' messages
          aggr : GlobalEstimator;
  		  // GPIO device
		  gpio : GPIODevice;	
       }
    }
}
