// RIAPS Modbus (UART) Device Testing

app RIAPSModbusUART {
    message ModbusCommand;     // send Modbus action Request 
    message ModbusResponse;    // get response from Modbus action  
    message ModbusData;           // information for the logger to grab
        
    library serialModbusLib;
    
	// Modbus (UART) device interface - UART1
	//     considered the server for the request/response interaction
    device ModbusUartDevice(slaveaddress=10,port='ttyO1',baudrate=57600,serialTimeout=1.0) {      
      rep modbusRepPort : (ModbusCommand,ModbusResponse);	
      timer clock 1000;   
    }
    
    // Example Component to show Modbus I/F usage
    component ComputationalComponent() {
      timer clock 5000;
      pub tx_modbusData : ModbusData ;  	     // When data is ready, 
      req modbusReqPort : (ModbusCommand,ModbusResponse); // Port used to communicate with the ModbusUartDevice
    }

	component Logger(db_host='127.0.0.1', db_port=8086, db_name='MOdbusIO', db_user='riaps', db_password='riaps') {
	  sub rx_modbusData : ModbusData;	
	}

    // Modbus Communication Example actor
    actor ModbusExampleActor() {
    	local ModbusCommand,ModbusResponse;	// Local message types
      	{
     		modbus : ModbusUartDevice(slaveaddress=10,port='ttyO2',baudrate=57600,serialTimeout=3);  // Slave Address is in decimal
          	commInitiator : ComputationalComponent(); 		
       	}
    }
    
    actor ModbusLogger(){
       	{
		 	logger : Logger(db_host='127.0.0.1', db_port=8086, db_name='ModbusIO', db_user='riaps', db_password='riaps');
		}
    }
}
